version: '3.7'
services:
  node:
    image:  ng-openvidu_node:latest
    # build:
    #   context: ./npm-cli
    #   args:
    #     - NODE_ENV=development
    # you can use legacy debug config or new inspect
    # NOTE: if nodemon isn't restarting on changes, you might be on Windows
    # which has trouble seeing file changes, so add -L to use legacy polling
    # https://github.com/remy/nodemon#application-isnt-restarting
    #command: ../node_modules/.bin/nodemon --debug=0.0.0.0:5858
#    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 ./bin/www
    command: bash -c "pnpm i && npm start"
    ports: 
      - 4200:4200
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.node.rule: Host(`node.conduit3.com`)
        traefik.http.routers.node.tls: "true"          
        traefik.http.routers.node.entrypoints: https
        traefik.http.routers.node.service: node
        traefik.http.services.node.loadbalancer.server.port: 4200
  #      traefik.tcp.routers.nodered-debug.rule: Host(`node-debug.conduit3.com`) 
  #      traefik.tcp.routers.nodered-debug.entrypoints: http
  #      traefik.tcp.routers.nodered-debug.service: nodered-debug
  #      traefik.tcp.services.nodered-debug.loadbalancer.server.port: 9229
      replicas: 1
      placement:
          constraints:
              - node.role == manager
          preferences:
              - spread: node.labels.zone
      update_config:
          parallelism: 1
          delay: 10s
      resources:
          limits:
              cpus: '1'
              memory: 500M
          reservations:
  #             cpus: '1'
              memory: 100M
      restart_policy:
          condition: on-failure
          delay: 5s
          max_attempts: 3
          window: 10s
    volumes:
      - .:/opt/node_app/app:delegated
      - ./package.json:/opt/node_app/package.json
      - ./package-lock.json:/opt/node_app/package-lock.json
      - notused:/opt/node_app/app/node_modules
    environment:
      - NODE_ENV=development
    healthcheck:
      disable: true
    networks:
      docker-Traefik_private:
    user: root
    working_dir: /opt/node_app/app/
volumes:
  notused:
  nodered_projects:
  nodered_node_modules:
networks:
  docker-Traefik_private:
    external: true